<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>It on 低质量随笔</title>
    <link>https://kyzy540.github.io/tags/it/</link>
    <description>Recent content in It on 低质量随笔</description>
    <generator>Hugo -- 0.149.0</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 May 2025 13:48:54 +0800</lastBuildDate>
    <atom:link href="https://kyzy540.github.io/tags/it/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pyenv迁移uv</title>
      <link>https://kyzy540.github.io/post/pyenv_to_uv/</link>
      <pubDate>Thu, 15 May 2025 13:48:54 +0800</pubDate>
      <guid>https://kyzy540.github.io/post/pyenv_to_uv/</guid>
      <description>&lt;p&gt;pyenv和uv是俩python工具，都可以管理版本。只不过后者还提供管理项目的功能。看他们github介绍可见一斑&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pyenv/pyenv&#34;&gt;pyenv&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simple Python version management&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/astral-sh/uv&#34;&gt;uv&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An extremely fast Python package and project manager, written in Rust.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;uv所谓的项目管理，包含构建、测试、发布等功能。传统软件工程的老几样。显然管辖范围比pyenv大。在uv之前python的项目管理工具还有poetry、pdm等。综合比较项目活跃度、易用性、性能后，uv是其中较好的一款工具&lt;/p&gt;
&lt;p&gt;关于项目管理不展开说，仅介绍如何从pyenv迁移到uv。这对开发者来说通常是绕不开的第一步&lt;/p&gt;
&lt;p&gt;如果有耐心，可以先看&lt;a href=&#34;https://docs.astral.sh/uv/getting-started/#using-uv-build&#34;&gt;uv官方文档&lt;/a&gt;。下面是实操&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装uv，在macos下用brew&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install uv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;进入项目目录，初始化项目&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uv init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时，uv会创建&lt;code&gt;.python-version&lt;/code&gt;、&lt;code&gt;main.py&lt;/code&gt;、&lt;code&gt;pyproject.toml&lt;/code&gt;等文件，和&lt;code&gt;.venv&lt;/code&gt;目录，对应未初始化的虚拟环境。对于已有项目的迁移，程序入口和 Python 版本通常已经明确，可以保留 &lt;code&gt;pyproject.toml&lt;/code&gt; 和 &lt;code&gt;.venv&lt;/code&gt;，其余删除&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;编辑&lt;code&gt;pyproject.toml&lt;/code&gt;，指定python版本和pyenv一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;导入依赖包&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uv add -r requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;虽然导依赖只有一行命令，但它其实做了3件事: 用指定python版本真正初始化&lt;code&gt;.venv&lt;/code&gt;虚拟环境 -&amp;gt; 修改&lt;code&gt;pyproject.toml&lt;/code&gt;文件添加依赖 -&amp;gt; 安装依赖包。如果第一次运行且依赖多。这里可能会多花些时间&lt;/p&gt;
&lt;p&gt;顺带一提，uv是多线程装包，速度比pyenv+pip快得多&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;删除pyenv初始化配置，通常在&lt;code&gt;.zshrc&lt;/code&gt;等地方。记得 &lt;strong&gt;重启shell&lt;/strong&gt;。否则&lt;code&gt;source .venv/bin/activate&lt;/code&gt;可能会失效。这也是我放弃pyenv的原因之一。它可能引入冲突，难以排查&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#eval &amp;#34;$(pyenv init -)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#eval &amp;#34;$(pyenv virtualenv-init -)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;到这其实迁移已完成。为了方便，可以加点佐料&lt;/p&gt;
&lt;p&gt;&lt;em&gt;7. 安装direnv&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install direnv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;8. 启用direnv和python的oh-my-zsh插件&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# vi ~/.zshrc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plugins&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;... python direnv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PYTHON_VENV_NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.venv&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PYTHON_AUTO_VRUN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source $ZSH/oh-my-zsh.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;direnv方便自动设环境变量 (如&lt;code&gt;PYTHONPATH&lt;/code&gt;)，写在&lt;code&gt;.envrc&lt;/code&gt;里即可。python插件可以自动启用/退出虚拟环境，注意&lt;code&gt;PYTHON_VENV_NAME&lt;/code&gt;和&lt;code&gt;PYTHON_AUTO_VRUN&lt;/code&gt;，必须在&lt;code&gt;source $ZSH/oh-my-zsh.sh&lt;/code&gt;前声明&lt;/p&gt;</description>
    </item>
    <item>
      <title>brew 降级</title>
      <link>https://kyzy540.github.io/post/brew_downgrade/</link>
      <pubDate>Thu, 20 Feb 2025 14:05:23 +0800</pubDate>
      <guid>https://kyzy540.github.io/post/brew_downgrade/</guid>
      <description>&lt;p&gt;参考: &lt;a href=&#34;https://stackoverflow.com/questions/3987683/homebrew-install-specific-version-of-formula&#34;&gt;Homebrew install specific version of formula?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以&lt;a href=&#34;https://formulae.brew.sh/cask/alt-tab&#34;&gt;alt-tab&lt;/a&gt;为例，从7.20.0 (有bug会崩溃) 降级到7.19.1&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 &lt;a href=&#34;https://formulae.brew.sh/cask/alt-tab&#34;&gt;https://formulae.brew.sh/cask/alt-tab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;跳转 &lt;a href=&#34;https://github.com/Homebrew/homebrew-cask/blob/0ef28d3335279b043b131ffd4d5cfb3759837912/Casks/a/alt-tab.rb&#34;&gt;Cask code on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;点开 &lt;a href=&#34;https://github.com/Homebrew/homebrew-cask/commits/master/Casks/a/alt-tab.rb&#34;&gt;alt-tab.rb History&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;找到要目标版本 (要降低到的版本)，点&lt;code&gt;View code at this point&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;下载 &lt;a href=&#34;https://github.com/Homebrew/homebrew-cask/blob/cbdcf50a724cb180d1c64719d331c9b70d85eca5/Casks/a/alt-tab.rb&#34;&gt;alt-tab.rb 7.19.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;控制台进alt-tab.rb所在目录，执行&lt;code&gt;brew rnstall alt-tab.rb&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;该方法虽然麻烦，但通用。如果软件预备了多版本，例如 &lt;a href=&#34;https://formulae.brew.sh/formula/mysql-client&#34;&gt;mysql-client&lt;/a&gt;，可以通过&lt;code&gt;brew install mysql-client@8.4&lt;/code&gt;切版本，相对方便&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zsh on macOS</title>
      <link>https://kyzy540.github.io/post/zsh_on_mac/</link>
      <pubDate>Mon, 19 Aug 2024 10:18:44 +0800</pubDate>
      <guid>https://kyzy540.github.io/post/zsh_on_mac/</guid>
      <description>&lt;p&gt;前些日换Mac电脑，发现迁移zsh的配置有点繁琐，整了好一阵才顺手。索性写个文档记录下&lt;/p&gt;
&lt;p&gt;先安装oh-my-zsh，和俩爱用的插件 (自动补全和高亮)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sh -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  git clone https://github.com/zsh-users/zsh-autosuggestions &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ZSH_CUSTOM&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;~/.oh-my-zsh/custom&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/plugins/zsh-autosuggestions &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ZSH_CUSTOM&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;~/.oh-my-zsh/custom&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/plugins/zsh-syntax-highlighting
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再来个Dracula主题&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/dracula/zsh.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv zsh/dracula.zsh-theme &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ZSH_CUSTOM&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;~/.oh-my-zsh/custom&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/themes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv zsh/lib &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ZSH_CUSTOM&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;~/.oh-my-zsh/custom&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/themes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;改&lt;code&gt;~/.zshrc&lt;/code&gt;，启用主题和插件，禁用自动更新 (自动更新影响shell启动速度)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ZSH_THEME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dracula&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zstyle &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:omz:update&amp;#39;&lt;/span&gt; mode disabled  &lt;span style=&#34;color:#75715e&#34;&gt;# disable automatic updates&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plugins&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;git history zsh-autosuggestions zsh-syntax-highlighting&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于常用的&lt;code&gt;alias&lt;/code&gt;，参考&lt;code&gt;.zshrc&lt;/code&gt;备注，写到&lt;code&gt;${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/aliases.zsh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同理，在&lt;code&gt;custom&lt;/code&gt;目录下写&lt;code&gt;pyenv.zsh&lt;/code&gt;初始化&lt;code&gt;pyenv&lt;/code&gt; (omz的pyenv插件不好使)。写&lt;code&gt;auth.zsh&lt;/code&gt; export 常用认证相关环境变量&lt;/p&gt;
&lt;p&gt;希望对每个命令都奏效的环境变量写到&lt;code&gt;~/.zshenv&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# read even when Zsh is launched to run a single command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export COPYFILE_DISABLE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# go&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GOPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;/go&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$GOPATH&lt;span style=&#34;color:#e6db74&#34;&gt;/bin:&lt;/span&gt;$PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考: &lt;a href=&#34;https://unix.stackexchange.com/questions/71253/what-should-shouldnt-go-in-zshenv-zshrc-zlogin-zprofile-zlogout&#34;&gt;What should/shouldn&amp;rsquo;t go in .zshenv, .zshrc, .zlogin, .zprofile, .zlogout?&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>macOS安装v2ray客户端</title>
      <link>https://kyzy540.github.io/post/macos_v2ray_client/</link>
      <pubDate>Sat, 27 Jul 2024 07:45:32 +0800</pubDate>
      <guid>https://kyzy540.github.io/post/macos_v2ray_client/</guid>
      <description>&lt;p&gt;主要介绍如何安装和配置v2ray，以及思路。如果只想要客户端配置，请跳至末尾&lt;/p&gt;
&lt;h2 id=&#34;v2ray介绍和服务端安装&#34;&gt;v2ray介绍和服务端安装&lt;/h2&gt;
&lt;p&gt;v2ray服务端安装之前写过一篇: &lt;a href=&#34;../vpnsetup&#34;&gt;《VPN Setup》&lt;/a&gt;。安装后记录关键配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;serverIp&lt;/strong&gt; (e.g. 20.163.126.10)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;serverPort&lt;/strong&gt; (e.g. 35555)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uuid&lt;/strong&gt; (e.g. e2f30fgk-xxxx-xxxx-xxxx-xxxxxxxxxxxx)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;alertId&lt;/strong&gt; (e.g. 42)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装v2ray客户端&#34;&gt;安装v2ray客户端&lt;/h2&gt;
&lt;p&gt;v2ray客户端有很多，V2rayU/V2rayX/V2box等。要么多年无人维护，要么安装繁琐。到底还是开源社区维护的&lt;a href=&#34;https://github.com/v2fly/v2ray-core&#34;&gt;v2fly/v2ray-core&lt;/a&gt;最靠谱&lt;/p&gt;
&lt;p&gt;简单说，v2ray是一个支持vmess加密通讯服务。启动两个服务，一个在外网 (server)，一个在mac上 (client)。client向mac提供socket代理服务，和server通过vmess通讯&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://kyzy540.github.io/img/macos_v2ray_client/dataflow.png#center&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注: 技术上说，图中client和server都是网络服务。mac将client的socket服务配置为系统代理才能起效&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;brew-install-v2ray&#34;&gt;brew install v2ray&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;brew&lt;/code&gt;是macOS的第三方包管理工具，可以用国内脚本安装 (github链接不稳定)。建议设阿里云镜像源。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/bin/zsh -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装v2ray&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install v2ray
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;全局代理配置&#34;&gt;全局代理配置&lt;/h2&gt;
&lt;p&gt;从最简单开始。这是所有流量都走代理的配置，保存到&lt;code&gt;$HOME/config.json&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;inbounds&lt;/strong&gt;: 用&lt;code&gt;socks&lt;/code&gt;协议监听&lt;code&gt;127.0.0.1:1080&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;outbounds&lt;/strong&gt;: 用&lt;code&gt;vmess&lt;/code&gt;协议转发流量，&lt;code&gt;vnext&lt;/code&gt;下是链接服务端的地址和认证&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;意味着client会将发往&lt;code&gt;127.0.0.1:1080&lt;/code&gt;的流量通过&lt;code&gt;vmess&lt;/code&gt;转发到服务端&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;inbounds&amp;#34;&lt;/span&gt;: [{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1080&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// v2ray客户端监听端口
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;listen&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 只允许本电脑链接
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;protocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;socks&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;settings&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;noauth&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;udp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;outbounds&amp;#34;&lt;/span&gt;: [{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;protocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vmess&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;settings&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;vnext&amp;#34;&lt;/span&gt;: [{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverIp&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// v2ray服务器IP
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;serverPort&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 服务端口
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;users&amp;#34;&lt;/span&gt;: [{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uuid&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;alterId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;alertId&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动client&lt;/p&gt;</description>
    </item>
    <item>
      <title>zkcli</title>
      <link>https://kyzy540.github.io/post/zkcli/</link>
      <pubDate>Sat, 16 Sep 2023 21:06:11 +0800</pubDate>
      <guid>https://kyzy540.github.io/post/zkcli/</guid>
      <description>&lt;p&gt;&lt;em&gt;2023-09-16&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;一个zookeeper cli客户端工具。基于&lt;code&gt;let-us-go/zkcli&lt;/code&gt;改进。原版地址 (内附安装教程): &lt;a href=&#34;https://github.com/let-us-go/zkcli&#34;&gt;https://github.com/let-us-go/zkcli&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原版有个问题: &lt;code&gt;deleteall&lt;/code&gt;子命令不能递归删除zookeeper node。原因是 &lt;a href=&#34;https://github.com/let-us-go/zkcli/blob/master/core/cmd.go#L160&#34;&gt;代码&lt;/a&gt; 没实现递归删除&lt;/p&gt;
&lt;p&gt;鉴于仓库已超过1年不更新 (最后一次commit在2022-08-16)，我只好自己fork代码，增加了&lt;code&gt;deleteall&lt;/code&gt;的递归逻辑。安装命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go install github.com/kyzy540/zkcli@latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;相较于zookeeper自带的cli工具 &lt;code&gt;zkCli.sh&lt;/code&gt;，这个go版本有3点优势&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交互模式支持 &lt;code&gt;tab&lt;/code&gt; 自动提示&lt;/li&gt;
&lt;li&gt;支持 batch 模式执行命令&lt;/li&gt;
&lt;li&gt;方便安装配置，不依赖java&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;zkcli&lt;/code&gt;默认会读配置文件&lt;code&gt;$HOME/.config/zkcli.conf&lt;/code&gt;，可以避免每条命了都要输入冗长参数。配置文件参考 &lt;a href=&#34;https://github.com/let-us-go/zkcli/blob/master/zkcli.conf&#34;&gt;zkcli.conf&lt;/a&gt;。个人常用配置如下&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;s 127.0.0.1:2181
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;P.S. 这是本人第一次写&lt;code&gt;go&lt;/code&gt;代码，如有问题还请见谅🙏&lt;/p&gt;</description>
    </item>
    <item>
      <title>分析一个Python MongoEngine的多层装饰器</title>
      <link>https://kyzy540.github.io/post/python_decorator/</link>
      <pubDate>Tue, 01 Aug 2023 16:48:08 +0800</pubDate>
      <guid>https://kyzy540.github.io/post/python_decorator/</guid>
      <description>&lt;p&gt;在读MongoEngine文档时候看到了一段很牛逼的嵌套装饰器 &lt;a href=&#34;https://github.com/MongoEngine/mongoengine/blob/master/docs/guide/signals.rst&#34;&gt;@update_modified.apply&lt;/a&gt; ，核心代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;handler&lt;/span&gt;(event):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Signal decorator to allow use of callback functions as class decorators.&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;decorator&lt;/span&gt;(fn):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apply&lt;/span&gt;(cls):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(fn, sender&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cls)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; cls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;apply &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; apply
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fn
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; decorator
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@handler&lt;/span&gt;(signals&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pre_save)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update_modified&lt;/span&gt;(sender, document):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    document&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;modified &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utcnow()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@update_modified.apply&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Record&lt;/span&gt;(Document):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    modified &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DateTimeField()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述代码实现等同如下代码的功能，核心目的是让 &lt;code&gt;event/fn/cls&lt;/code&gt; 都可以组装。但……这个嵌套装饰器具体是如何生效的?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;signals&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pre_save&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(update_modified, sender&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Record)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考 &lt;a href=&#34;https://www.zhihu.com/question/26930016&#34;&gt;《如何理解python装饰器》&lt;/a&gt; 可知道如下关系:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cls = Record&lt;/li&gt;
&lt;li&gt;fn = update_modified&lt;/li&gt;
&lt;li&gt;event = signals.pre_save&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 &lt;code&gt;handler&lt;/code&gt; 装饰 &lt;code&gt;update_modified&lt;/code&gt; 返回了装饰器&lt;code&gt;decorator&lt;/code&gt;，即一个组装的函数定义。将嵌套装饰器转换成单层装饰器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;decorator&lt;/span&gt;(fn):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apply&lt;/span&gt;(cls):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        signals&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pre_save&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(fn, sender&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cls)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; cls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;apply &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; apply
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;装饰器&lt;code&gt;decorator&lt;/code&gt;有点特别，它没直接返回内部函数&lt;code&gt;apply&lt;/code&gt;，而是将&lt;code&gt;apply&lt;/code&gt;赋值给传入函数&lt;code&gt;fn.apply&lt;/code&gt;后返回&lt;code&gt;fn&lt;/code&gt;。Python中函数是一等公民，即函数也是对象，&lt;code&gt;fn.apply = apply&lt;/code&gt; 就使用了这一特性&lt;/p&gt;</description>
    </item>
    <item>
      <title>扩展插件SwitchyOmega</title>
      <link>https://kyzy540.github.io/post/extend_switchyomega/</link>
      <pubDate>Thu, 30 Mar 2023 20:26:29 +0800</pubDate>
      <guid>https://kyzy540.github.io/post/extend_switchyomega/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;SwitchyOmega是著名Chrome代理插件，&lt;a href=&#34;https://github.com/FelisCatus/SwitchyOmega&#34;&gt;源代码&lt;/a&gt;开源在GitHub，最近release是2018年8月&lt;/p&gt;
&lt;p&gt;它很健全，但算不上完美。截止写本文的2023年3月，GitHub仍有新issue提交，但开发者已经了无音讯&lt;/p&gt;
&lt;p&gt;所以当我想对它做改动，只能直接修改源代码，自己制作crx了&lt;/p&gt;
&lt;p&gt;需求是: 任意网页上，如果出现了如下span，SwitchyOmega可以一键载入代理服务器的地址和端口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;proxy&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data-profileName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;demo&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data-patterns&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[&amp;#34;192.168.*&amp;#34;]&amp;#39;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  HTTP://172.168.1.1:8080
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;工作可以拆分成几步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;学习Chrome插件基本原理&lt;/li&gt;
&lt;li&gt;了解SwitchyOmega如何实现代理功能&lt;/li&gt;
&lt;li&gt;确认需求可否实现&lt;/li&gt;
&lt;li&gt;学习本地开发和调试&lt;/li&gt;
&lt;li&gt;着手实现&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我不想发布这个模改的插件，毕竟它仅对个人有用。所以到这就差不多了&lt;/p&gt;
&lt;p&gt;对了，我没前端经验，也没开发过Chrome插件&lt;/p&gt;
&lt;h2 id=&#34;基础知识&#34;&gt;基础知识&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.chrome.com/docs/extensions/mv3/getstarted/development-basics/&#34;&gt;Chrome Extension development basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.chrome.com/docs/extensions/reference/proxy/&#34;&gt;chrome.proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.runoob.com/angularjs/angularjs-scopes.html&#34;&gt;AngularJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://coffeescript.org/&#34;&gt;CoffeeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FelisCatus/SwitchyOmega/blob/master/README.md#building-the-project&#34;&gt;Building the project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Chrome插件开发基础中主要了解4个点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;插件的主要构成。包含前端、后端、manifest、options&lt;/li&gt;
&lt;li&gt;插件前后端通信机制&lt;/li&gt;
&lt;li&gt;Chrome代理相关API&lt;/li&gt;
&lt;li&gt;SwitchyOmega如何基于配置调用Chrome API实现代理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SwitchyOmega代码 76.7% 是 CoffeeScript，用到了AngularJS框架。依赖 NodeJS/npm/Grunt/bower 构建 (build)&lt;/p&gt;
&lt;h2 id=&#34;switchyomega配置代理流程&#34;&gt;SwitchyOmega配置代理流程&lt;/h2&gt;
&lt;p&gt;下图展示了在SwitchyOmega 选项页面里创建一个 &amp;ldquo;情景模式&amp;rdquo; (代理配置) 是如何生效的&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://kyzy540.github.io/img/extend_switchyomega/switchy_omega_save_profile.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;首先，SwitchyOmega本身没实现代理功能。它实现了一套界面，让用户可以方便使用Chrome代理API。Chrome内部完成了具体的代理实现&lt;/p&gt;
&lt;p&gt;其次，SwitchyOmega在后台保存了一份核心数据结构&lt;code&gt;options&lt;/code&gt;，其会被转译并导入&lt;code&gt;chrome.proxy.settings&lt;/code&gt;。SwitchyOmega的前后端设计都围绕着维护&lt;code&gt;options&lt;/code&gt;数据结构设计。要实现点击span加载配置，重点就在于搞明白如何将页面数据导入&lt;code&gt;options&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;本地开发和调试&#34;&gt;本地开发和调试&lt;/h2&gt;
&lt;h3 id=&#34;构建&#34;&gt;构建&lt;/h3&gt;
&lt;p&gt;开发的第一步，是走通原有的构建流程，在Chrome里试用正常。如果参考构建文档，会在 &lt;code&gt;npm run deps&lt;/code&gt; 阶段遇到如下报错&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;bower angular-spectrum-colorpicker#~1.3.5      ECMDERR Failed to execute &amp;ldquo;git ls-remote &amp;ndash;tags &amp;ndash;heads &lt;a href=&#34;https://github.com/Jimdo/angular-spectrum-colorpicker.git%22&#34;&gt;https://github.com/Jimdo/angular-spectrum-colorpicker.git&amp;quot;&lt;/a&gt;, exit code of #128 remote: Repository not found. fatal: Authentication failed for &amp;lsquo;&lt;a href=&#34;https://github.com/Jimdo/angular-spectrum-colorpicker.git/&#39;&#34;&gt;https://github.com/Jimdo/angular-spectrum-colorpicker.git/&#39;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VPN Setup</title>
      <link>https://kyzy540.github.io/post/vpnsetup/</link>
      <pubDate>Tue, 18 Oct 2022 09:16:11 +0800</pubDate>
      <guid>https://kyzy540.github.io/post/vpnsetup/</guid>
      <description>&lt;h2 id=&#34;v2ray&#34;&gt;V2Ray&lt;/h2&gt;
&lt;p&gt;关于V2Ray介绍，请参考 &lt;a href=&#34;https://itlanyan.com/v2ray-tutorial/&#34;&gt;V2Ray简介和搭建教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文章写得很好，我仅做点补充: 文中的安装脚本 (goV2.sh) 在2022年11月7日报错。我仅针对报错修改了一下脚本，可自取&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://raw.githubusercontent.com/kyzy540/blogdraft/main/static/scripts/goV2.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x goV2.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ./goV2.sh --version v5.1.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;改动点如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;删除&lt;code&gt;v2ctl&lt;/code&gt; 相关代码，&lt;code&gt;v2ctl&lt;/code&gt; 在v2ray v5.1.0 中被移除&lt;/li&gt;
&lt;li&gt;修改&lt;code&gt;v2ray.service&lt;/code&gt;启动命令，增加了&lt;code&gt;run&lt;/code&gt;子命令和 &lt;code&gt;v2ray.vmess.aead.forced=false&lt;/code&gt; 环境变量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该脚本集成了配置文件生成，位置在&lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;。其中的uuid和端口均自动生成。安装完成后参考配置放行端口，启用服务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ubuntu 20.02&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;grep port /etc/v2ray/config.json | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; | cut -d, -f1&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ufw allow &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;port&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/tcp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#启用 v2ray服务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl enable v2ray
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl start v2ray
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意云实例的防火墙也要放行配置中的端口(TCP协议)&lt;/p&gt;
&lt;h3 id=&#34;诊断v2ray代理&#34;&gt;诊断V2Ray代理&lt;/h3&gt;
&lt;p&gt;在未配置 &lt;code&gt;v2ray.vmess.aead.forced=false&lt;/code&gt; 环境变量时V2Ray代理虽然能链接，但Safari打不开任何网页，报错类似&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;safari cannot open the page cannot establish a secure connection&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;诊断的关键是在 &lt;code&gt;/etc/v2ray/config.json&lt;/code&gt; 加入日志配置，并重启v2ray服务&lt;/p&gt;</description>
    </item>
    <item>
      <title>ERROR: Win32Bridge.Server.exe</title>
      <link>https://kyzy540.github.io/post/windows_bridge_server_error/</link>
      <pubDate>Thu, 28 Apr 2022 09:43:39 +0800</pubDate>
      <guid>https://kyzy540.github.io/post/windows_bridge_server_error/</guid>
      <description>&lt;p&gt;某次系统升级后一登录就报错&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows cannot find &amp;lsquo;C:\Program Files\Microsoft.549981C3F5F10_4.2203.4603.0_x64&amp;hellip;\Win32Bridge.Server.exe&amp;rsquo;. Make sure you typed the name correctly, and the try again.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;简单来说就是Cortana (小娜)的问题，参考下图在配置里重置就好&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;img&#34; loading=&#34;lazy&#34; src=&#34;https://kyzy540.github.io/img/windows/bridge_server_error.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://answers.microsoft.com/en-us/windows/forum/all/win32bridge-server-problem-cant-find/5377d9bc-3e66-415d-b9c1-48968747ea1d?auth=1&#34;&gt;参考链接&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>微软好终端</title>
      <link>https://kyzy540.github.io/post/windows_terminal/</link>
      <pubDate>Thu, 18 Jun 2020 19:05:59 +0800</pubDate>
      <guid>https://kyzy540.github.io/post/windows_terminal/</guid>
      <description>&lt;p&gt;Windows发展到今日，已非复吴下阿蒙。被诟病多年的&amp;quot;终端难用&amp;quot;问题已经有了不错的解决方案。本文分享几个让我受益颇多的工具&lt;/p&gt;
&lt;p&gt;在介绍工具前，读者应了解几点知识:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;掌握一种常用SHELL，例如bash,&lt;/li&gt;
&lt;li&gt;知道终端和SHELL的区别。如果不了解，请读&lt;a href=&#34;https://www.hanselman.com/blog/WhatsTheDifferenceBetweenAConsoleATerminalAndAShell.aspx&#34;&gt;博文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;知道cygwin，以及它和Linux/Mac下终端的区别&lt;/li&gt;
&lt;li&gt;知道Gnu和Linux/Unix的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;powershell&#34;&gt;Powershell&lt;/h2&gt;
&lt;p&gt;Powershell早在Windows7时代就被捆绑在系统内，在当代Windows电脑上基本都能用。我不推荐Powershell，但有时条件受限，不得不依仗它，例如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只能用早期操作系统，例如Windows7&lt;/li&gt;
&lt;li&gt;没有Administrator权限，无法添加/关闭系统功能&lt;/li&gt;
&lt;li&gt;机器性能贫瘠，跑cygwin都迟钝&lt;/li&gt;
&lt;li&gt;SDK或build环境局限于Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Powershell本身并不差，很多时候用户只因没法在其中使用grep/less/vim等命令，而抱怨不已。但其实这问题有解&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bmatzelle/gow/wiki&#34;&gt;GOW&lt;/a&gt; (Gnu On Windows)囊获了100+个常用Gnu命令。它开源、免费，只包含一堆EXE文件，大小18MB左右。我日常用到的Gnu命令都在其中&lt;/p&gt;
&lt;p&gt;想找出java文件中包含Log关键字最多的前3名？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PS C:\Users&amp;gt; grep -c Log *.java | sort {[&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;]$_.split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]} -D | head -n &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;A.java&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;B.java&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C.java&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中grep和head来自GOW，sort来自Powershell。如何确定这些命令的来源？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PS C:\Users&amp;gt; which head
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C: \Program Files (x86)\Gow\bin\grep.EXE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PS C:\Users&amp;gt; which head
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C: \WINDOWS\system32\sort.EXE
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有了GOW，Powershell已经能应付简单的终端任务&lt;/p&gt;
&lt;p&gt;另外，Powershell支持history，用户可以很方便地用ctrl+r回溯历史命令，这是cmd所不具备的&lt;/p&gt;
&lt;h3 id=&#34;可选工具&#34;&gt;可选工具&lt;/h3&gt;
&lt;p&gt;下面介绍的工具可能不适合所有人，只是我比较常用，不装也无妨&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/&#34;&gt;choco&lt;/a&gt; 是Windows下包管理工具，运行在终端内，类似apt和yum。推荐给爱尝鲜新软件的读者。以安装GOW为例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;choco install gow
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/vors/ZLocation&#34;&gt;ZLocation&lt;/a&gt; 类似autojump，是一款目录导航工具，可以理解为cd命令的补充。它能让用户在常用目录间左右横跳&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;ripgrep&lt;/a&gt; 是更好用的grep，用于文本搜索。我认为其性能和易用性都优于grep。例如下面命令会递归搜索当前目录下 .java和 .properties 文件，找 Log 关键词。rg会自动排查隐藏文件和二进制文件 (.class和.jar)，搜索效率很高&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rg -tjava Log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/stedolan/jq&#34;&gt;jq&lt;/a&gt; 是个JSON解析工具，对于经常写脚本解析JSON数据的朋友有帮助&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
